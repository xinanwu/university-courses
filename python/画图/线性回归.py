import numpy as np
import pandas as pd
from sklearn import linear_model #导入机器学习库中的线性回归方法
from matplotlib import pyplot as plt
data=pd.DataFrame({'00':[1.30,2.60,3.90],'01':[1.10,2.30,3.40],'02':[1.10,2.20,3.20],'10':[7.45,13.12,20.25],'11':[26.86,53.77,81.17]\
                   ,'12':[3.57,8.65,12.20],'13':[14.18,31.22,44.79],'14':[2.47,5.45,7.83],'15':[9.67,17.18,28.42]})
x0=np.array(data['10']).reshape([3,1])
x1=np.array(data['11']).reshape([3,1])
x2=np.array(data['12']).reshape([3,1])
x3=np.array(data['13']).reshape([3,1])
x4=np.array(data['14']).reshape([3,1])
x5=np.array(data['15']).reshape([3,1])
y0=np.array(data['00']).reshape([3,1])
y1=np.array(data['01']).reshape([3,1])
y2=np.array(data['02']).reshape([3,1])
model=linear_model.LinearRegression()
model.fit(x0,y0)
y00=model.predict(x0)
model.fit(x1,y0)
y01=model.predict(x1)
model.fit(x2,y1)
y02=model.predict(x2)
model.fit(x3,y1)
y03=model.predict(x3)
model.fit(x4,y2)
y04=model.predict(x4)
model.fit(x5,y2)
y05=model.predict(x5)
plt.scatter(x0,y0)
plt.scatter(x1,y0)
plt.scatter(x2,y1)
plt.scatter(x3,y1)
plt.scatter(x4,y2)
plt.scatter(x5,y2)
plt.plot(x0,y00)
plt.plot(x1,y01)
plt.plot(x2,y02)
plt.plot(x3,y03)
plt.plot(x4,y04)
plt.plot(x5,y05)
plt.xlabel("t(s)")
plt.ylabel("h(cm)")
plt.show()

